# Delitmus tests

## iriw.c.litmus

```
// <!> Auto-generated from a litmus test by act.
#include <stdatomic.h>
atomic_int x = 0;
atomic_int y = 0;
int t2r0 = 0;
int t2r1 = 0;
int t3r0 = 0;
int t3r1 = 0;
void
P0()
{ atomic_store_explicit(&x, 1, memory_order_seq_cst); }
void
P1()
{ atomic_store_explicit(&y, 1, memory_order_seq_cst); }
void
P2()
{
    t2r0 = atomic_load_explicit(&x, memory_order_acquire);
    t2r1 = atomic_load_explicit(&y, memory_order_seq_cst);
}
void
P3()
{
    t3r0 = atomic_load_explicit(&y, memory_order_acquire);
    t3r1 = atomic_load_explicit(&x, memory_order_seq_cst);
}

/* --Begin auxiliary output--

{
  "litmus_aux": {
    "locations": null,
    "init": { "x": 0, "y": 0 },
    "postcondition":
      "exists (t2r0 == 1 /\\ t2r1 == 0 /\\ t3r0 == 1 /\\ t3r1 == 0)"
  },
  "var_map": {
    "2:r0": "t2r0",
    "2:r1": "t2r1",
    "3:r0": "t3r0",
    "3:r1": "t3r1",
    "x": "x",
    "y": "y"
  },
  "num_threads": 4
} 
--End auxiliary output-- */
```
## iriw_fuzz_redundant.c.litmus

```
// <!> Auto-generated from a litmus test by act.
#include <stdatomic.h>
int MaJgQmON3yu = 2728;
int VFTQNWN = -13;
int ZgoV7uel9o = 1073;
int m02M5s = -64856;
atomic_int ne0J8wrPQam = -12197004;
atomic_int x = 0;
atomic_int y = 0;
int t3r0 = 0;
int t3r1 = 0;
int t4r0 = 0;
int t4r1 = 0;
void
P0()
{ atomic_store_explicit(&ne0J8wrPQam, 3417, memory_order_seq_cst); }
void
P1()
{
    atomic_store_explicit(&ne0J8wrPQam, 481486, memory_order_relaxed);
    atomic_store_explicit(&x, 1, memory_order_seq_cst);
}
void
P2()
{ atomic_store_explicit(&y, 1, memory_order_seq_cst); }
void
P3()
{
    t3r0 = atomic_load_explicit(&x, memory_order_acquire);
    t3r1 = atomic_load_explicit(&y, memory_order_seq_cst);
    atomic_store_explicit(&ne0J8wrPQam, -7, memory_order_seq_cst);
}
void
P4()
{
    t4r0 = atomic_load_explicit(&y, memory_order_acquire);
    t4r1 = atomic_load_explicit(&x, memory_order_seq_cst);
}

/* --Begin auxiliary output--

{
  "litmus_aux": {
    "locations": [
      "MaJgQmON3yu", "ZgoV7uel9o", "VFTQNWN", "m02M5s", "ne0J8wrPQam", "x",
      "y"
    ],
    "init": {
      "MaJgQmON3yu": 2728,
      "ZgoV7uel9o": 1073,
      "VFTQNWN": -13,
      "m02M5s": -64856,
      "ne0J8wrPQam": -12197004,
      "x": 0,
      "y": 0
    },
    "postcondition":
      "exists (t2r0 == 1 /\\ t2r1 == 0 /\\ t3r0 == 1 /\\ t3r1 == 0)"
  },
  "var_map": {
    "3:r0": "t3r0",
    "3:r1": "t3r1",
    "4:r0": "t4r0",
    "4:r1": "t4r1",
    "MaJgQmON3yu": "MaJgQmON3yu",
    "VFTQNWN": "VFTQNWN",
    "ZgoV7uel9o": "ZgoV7uel9o",
    "m02M5s": "m02M5s",
    "ne0J8wrPQam": "ne0J8wrPQam",
    "x": "x",
    "y": "y"
  },
  "num_threads": 5
} 
--End auxiliary output-- */
```
## memalloy_cmpxchg.c.litmus

```
// <!> Auto-generated from a litmus test by act.
#include <stdatomic.h>
atomic_int x = 0;
int t0r0 = 0;
void
P0()
{
    t0r0 = 0;
    atomic_compare_exchange_strong_explicit(&x, &t0r0, 2,
                                            memory_order_relaxed,
                                            memory_order_relaxed);
}
void
P1()
{ atomic_store_explicit(&x, 1, memory_order_relaxed); }

/* --Begin auxiliary output--

{
  "litmus_aux": {
    "locations": null,
    "init": { "x": 0 },
    "postcondition": "exists (t0r0 == 0 /\\ x == 2)"
  },
  "var_map": { "0:r0": "t0r0", "x": "x" },
  "num_threads": 2
} 
--End auxiliary output-- */
```
## memalloy_na_int.c.litmus

```
// <!> Auto-generated from a litmus test by act.
#include <stdatomic.h>
int x = 0;
int t0r0 = 0;
void
P0()
{ x = 1; t0r0 = x; }

/* --Begin auxiliary output--

{
  "litmus_aux": {
    "locations": null,
    "init": { "x": 0 },
    "postcondition": "exists (t0r0 == 0 /\\ x == 1)"
  },
  "var_map": { "0:r0": "t0r0", "x": "x" },
  "num_threads": 1
} 
--End auxiliary output-- */
```
## rwc.c.litmus

```
// <!> Auto-generated from a litmus test by act.
#include <stdatomic.h>
atomic_int x = 0;
atomic_int y = 0;
int t1r0 = 0;
int t1r1 = 0;
int t2r0 = 0;
void
P0()
{ atomic_store_explicit(&x, 1, memory_order_seq_cst); }
void
P1()
{
    t1r0 = atomic_load_explicit(&x, memory_order_acquire);
    t1r1 = atomic_load_explicit(&y, memory_order_seq_cst);
}
void
P2()
{
    atomic_store_explicit(&y, 1, memory_order_seq_cst);
    t2r0 = atomic_load_explicit(&x, memory_order_seq_cst);
}

/* --Begin auxiliary output--

{
  "litmus_aux": {
    "locations": null,
    "init": { "x": 0, "y": 0 },
    "postcondition": "exists (t1r0 == 1 /\\ t1r1 == 0 /\\ t2r0 == 0)"
  },
  "var_map": {
    "1:r0": "t1r0",
    "1:r1": "t1r1",
    "2:r0": "t2r0",
    "x": "x",
    "y": "y"
  },
  "num_threads": 3
} 
--End auxiliary output-- */
```

Ran 5 test(s).
