# Litmusifier tests

## clang_macho_o3_xchg.s

```
X86 clang_macho_o3_xchg.s

{ x = 0; y = 0; }

P0            | P1            ;
movl EAX, 2   | movl EAX, 2   ;
xchg [x], EAX | xchg [y], EAX ;
movl EAX, 1   | movl EAX, 1   ;
xchg [y], EAX | xchg [x], EAX ;

locations [x; y]
```
## gcc_elf_o0_stackchk.s

```
X86 gcc_elf_o0_stackchk.s

{
    t0gGSd200 = 0;
    t0gGSd201 = 0;
    t0r0 = 0;
    t0sZM12 = 0;
    t0sZM16 = 0;
    t0sZM20 = 0;
    t1gGSd200 = 0;
    t1gGSd201 = 0;
    t1sZM12 = 0;
    t1sZM16 = 0;
    t1sZM20 = 0;
    x = 0;
    y = 0;
}

P0                    | P1                    ;
movl EAX, [t0gGSd200] | movl EAX, [t1gGSd200] ;
movl [t0sZM12], EAX   | movl [t1sZM12], EAX   ;
xor EAX, EAX          | xor EAX, EAX          ;
movl [t0sZM20], 2     | movl [t1sZM20], 1     ;
movl EAX, [t0sZM20]   | movl EAX, [t1sZM20]   ;
movl [y], EAX         | movl [x], EAX         ;
mfence                | mfence                ;
movl EAX, [x]         | movl [t1sZM16], 1     ;
movl [t0sZM16], EAX   | movl EAX, [t1sZM16]   ;
movl EAX, [t0sZM16]   | movl [y], EAX         ;
movl [t0r0], EAX      | mfence                ;
movl EAX, [t0sZM12]   | movl EAX, [t1sZM12]   ;
xor EAX, [t0gGSd201]  | xor EAX, [t1gGSd201]  ;

locations [t0gGSd200; t0gGSd201; t0r0; t0sZM12; t0sZM16; t0sZM20; t1gGSd200;
           t1gGSd201; t1sZM12; t1sZM16; t1sZM20; x; y]
```
## gcc_macho_o0_deref_cmpxchg.s

```
X86 gcc_macho_o0_deref_cmpxchg.s

{ ZUt0r0 = 0; t0sZM4 = 0; t0sZM8 = 0; x = 0; }

P0                      | P1         ;
movl [ZUt0r0], 0        | mov [x], 1 ;
movl [t0sZM4], x        |            ;
movl [t0sZM8], 2        |            ;
movl EAX, [t0sZM8]      |            ;
movl EDX, EAX           |            ;
movl ECX, [t0sZM4]      |            ;
movl EAX, [ZUt0r0]      |            ;
lock cmpxchg [ECX], EDX |            ;
movl EDX, EAX           |            ;
sete AL                 |            ;
testb AL, AL            |            ;
jne L3                  |            ;
movl [ZUt0r0], EDX      |            ;
L3:                     |            ;

locations [ZUt0r0; t0sZM4; t0sZM8; x]
```
## gcc_macho_o0_deref_write.s

```
X86 gcc_macho_o0_deref_write.s

{ ZUt0r0 = 0; ZUt1r0 = 0; t0sZM8 = 0; x = 0; y = 0; }

P0                 | P1                 ;
mov EAX, [y]       | movl EAX, [x]      ;
movl [t0sZM8], EAX | movl [ZUt1r0], EAX ;
movl EAX, [t0sZM8] | movl EAX, [ZUt1r0] ;
movl [ZUt0r0], EAX | cmp EAX, 1         ;
movl EAX, [ZUt0r0] | jne L6             ;
cmp EAX, 1         | mov [y], 1         ;
jne L3             | L6:                ;
movl [x], 1        |                    ;
L3:                |                    ;

locations [ZUt0r0; ZUt1r0; t0sZM8; x; y]
```
## gcc_macho_o0_immediate_heap.s

```
X86 gcc_macho_o0_immediate_heap.s

{ ZUt0r0 = 0; t0sZM12 = 0; x = 0; y = 0; }

P0                  | P1         ;
mov EAX, [x]        | mov [y], 2 ;
movl [t0sZM12], EAX | mov [x], 1 ;
movl EAX, [t0sZM12] |            ;
movl [ZUt0r0], EAX  |            ;
mov [y], 1          |            ;

locations [ZUt0r0; t0sZM12; x; y]
```
## gcc_macho_o0_moves.s

```
X86 gcc_macho_o0_moves.s

{ ZUt0r0 = 0; ZUt1r0 = 0; t0sZM4 = 0; t1sZM4 = 0; x = 0; y = 0; }

P0                 | P1                 ;
movl EAX, [y]      | movl EAX, [x]      ;
movl [t0sZM4], EAX | movl [ZUt1r0], EAX ;
movl EAX, [t0sZM4] | movl EAX, [ZUt1r0] ;
movl [ZUt0r0], EAX | cmp EAX, 1         ;
movl EAX, [ZUt0r0] | jne L6             ;
cmp EAX, 1         | movl [t1sZM4], 1   ;
jne L3             | movl EAX, [t1sZM4] ;
movl [x], 1        | movl [y], EAX      ;
L3:                | mfence             ;
                   | L6:                ;

locations [ZUt0r0; ZUt1r0; t0sZM4; t1sZM4; x; y]
```

Ran 6 test(s).
