#!/usr/bin/env python3
#
# Copyright (c) 2018--2019 Matt Windsor and contributors
#
# ACT itself is licensed under the MIT License. See the LICENSE file in the
# project root for more information.
#
# ACT is based in part on code from the Herdtools7 project
# (https://github.com/herd/herdtools7) : see the LICENSE.herd file in the
# project root for more information.
"""Perform modifications on a Litmus header.

This program accepts, on stdin, a JSON Litmus header.  It then dumps the same
header back on stdout, but with various splices.
"""

import sys
import argparse
import typing

import act_py.litmus_header


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        "-p",
        "--postcondition",
        metavar="POST",
        type=str,
        nargs='?',
        default=None,
        const='',
        help="The postcondition to splice into the litmus header; if empty, clears the postcondition",
    )

    args = parser.parse_args()

    header: act_py.litmus_header.LitmusHeader = act_py.litmus_header.load(sys.stdin)
    new_header = doctor(header, args.postcondition)
    new_header.dump(sys.stdout)


def doctor(header: act_py.litmus_header.LitmusHeader, postcondition: typing.Optional[str]) -> act_py.litmus_header.LitmusHeader:
    """Performs alterations to a header.

    :param header: The header to alter (may be mutated).
    :param postcondition:
      If given, the new postcondition to splice.
      If given and empty, the postcondition will be removed.
    :return: The new header, which may or may not be a new object.
    """
    if postcondition is not None:
        header.postcondition = postcondition if postcondition != "" else None
    return header


if __name__ == "__main__":
    main()
