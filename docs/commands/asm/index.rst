.. _commands-act-asm:

``act-asm``: commands on assembly files
=======================================

``act-asm`` contains commands for manipulating individual assembly files and
assembly litmus tests.

Running ``act-asm`` on its own provides a short synopsis of the available
subcommands.

.. toctree::
   :maxdepth: 2
   :caption: Sub-commands:

   explain
   litmusify

Command conventions
-------------------

As the ``act-asm`` commands all operate on single assembly files, they
have similarities in their command interface.

Specifying a target architecture or compiler
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Supported input file types
^^^^^^^^^^^^^^^^^^^^^^^^^^

Each ``act-asm`` command expects a single input file argument,
which may be one of:

- a flat assembly file (usually generated by a compiler);
- a flat C file;
- a C litmus test.

As each ``act-asm`` command natively operates on assembly Litmus tests, the
above list is in ascending order of internal processing needed.  A flat
assembly file needs sanitising and litmusifying; a flat C file also needs
compiling; and a C litmus test also needs de-litmusifying.

Specifying the input file
^^^^^^^^^^^^^^^^^^^^^^^^^

Usually, you can pass the command the name of an input file (in one of the
above formats) as an anonymous argument, and ``act`` will figure out the rest.
This said:

- when providing a C file or litmus test, you _must_ supply a target compiler
  for ``act`` to run to compile the C program.  ``act`` will return an error
  if it's only given a target architecture;
- ``act`` looks up the extension of the file to guess which input type it's
  receiving; when reading from standard input or an unconventionally
  extended file, use the ``-asm``, ``-c``, and ``-c-litmus`` flags to override
  its guess.


