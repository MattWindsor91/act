main: MACHINE IDENTIFIER LBRACE COMPILER IDENTIFIER LBRACE ARGV VIA
##
## Ends in an error in state: 48.
##
## argv -> ARGV . nonempty_list(STRING) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## ARGV
##

Expected at least one quoted string after `argv`

main: MACHINE IDENTIFIER LBRACE COMPILER IDENTIFIER LBRACE ARCH VIA
##
## Ends in an error in state: 52.
##
## id_directive(ARCH) -> ARCH . IDENTIFIER [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## ARCH
##
main: MACHINE IDENTIFIER LBRACE COMPILER IDENTIFIER LBRACE STYLE VIA
##
## Ends in an error in state: 26.
##
## id_directive(STYLE) -> STYLE . IDENTIFIER [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## STYLE
##
main: DEFAULT LBRACE TRY SIM WEIGHT
##
## Ends in an error in state: 97.
##
## default_item -> TRY try_category . IDENTIFIER [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## TRY try_category
##

Expected a valid identifier argument

##
## Ends in an error in state: 53.
##
## compiler_item -> STYLE . IDENTIFIER [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## STYLE
##
main: MACHINE IDENTIFIER LBRACE SIM WEIGHT
##
## Ends in an error in state: 23.
##
## id_stanza(SIM,sim_item) -> SIM . IDENTIFIER LBRACE separated_nonempty_list(EOL,option(sim_item)) RBRACE [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## SIM
##
main: MACHINE IDENTIFIER LBRACE COMPILER VIA
##
## Ends in an error in state: 45.
##
## id_stanza(COMPILER,compiler_item) -> COMPILER . IDENTIFIER LBRACE separated_nonempty_list(EOL,option(compiler_item)) RBRACE [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## COMPILER
##

Expected a valid identifier before starting the stanza

main: MACHINE IDENTIFIER LBRACE COMPILER IDENTIFIER LBRACE VIA
##
## Ends in an error in state: 47.
##
## id_stanza(COMPILER,compiler_item) -> COMPILER IDENTIFIER LBRACE . separated_nonempty_list(EOL,option(compiler_item)) RBRACE [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## COMPILER IDENTIFIER LBRACE
##
main: MACHINE IDENTIFIER LBRACE COMPILER IDENTIFIER LBRACE STYLE IDENTIFIER EOL VIA
##
## Ends in an error in state: 57.
##
## separated_nonempty_list(EOL,option(compiler_item)) -> option(compiler_item) EOL . separated_nonempty_list(EOL,option(compiler_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(compiler_item) EOL
##

Expected a valid compiler configuration item; for example:
- `enabled BOOL`
- `cmd "COMMAND"`
- `argv "ARG" "ARG" ...`
- `style STYLE-ID`
- `emits ARCH-ID`

main: DEFAULT LBRACE WEIGHT
##
## Ends in an error in state: 91.
##
## simple_stanza(DEFAULT,default_item) -> DEFAULT LBRACE . separated_nonempty_list(EOL,option(default_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## DEFAULT LBRACE
##
main: DEFAULT LBRACE EOL WEIGHT
##
## Ends in an error in state: 102.
##
## separated_nonempty_list(EOL,option(default_item)) -> option(default_item) EOL . separated_nonempty_list(EOL,option(default_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(default_item) EOL
##

Expected a valid default item (`try CATEGORY ID`)

main: DEFAULT LBRACE TRY WEIGHT
##
## Ends in an error in state: 92.
##
## default_item -> TRY . try_category IDENTIFIER [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## TRY
##

Expected a category after `try`; for example:
- `arch`
- `compiler`
- `machine`
- `sim`

main: FUZZ LBRACE WEIGHT
##
## Ends in an error in state: 77.
##
## simple_stanza(FUZZ,fuzz_item) -> FUZZ LBRACE . separated_nonempty_list(EOL,option(fuzz_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## FUZZ LBRACE
##
main: FUZZ LBRACE EOL WEIGHT
##
## Ends in an error in state: 87.
##
## separated_nonempty_list(EOL,option(fuzz_item)) -> option(fuzz_item) EOL . separated_nonempty_list(EOL,option(fuzz_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(fuzz_item) EOL
##

Expected a valid fuzz configuration item; for example:
- `action ACTION-ID`
- `action ACTION-ID weight NUM`

main: FUZZ LBRACE ACTION WEIGHT
##
## Ends in an error in state: 78.
##
## fuzz_item -> ACTION . IDENTIFIER option(fuzz_weight) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## ACTION
##

Expected an action identifier after `action`

main: FUZZ LBRACE ACTION IDENTIFIER VIA
##
## Ends in an error in state: 79.
##
## fuzz_item -> ACTION IDENTIFIER . option(fuzz_weight) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## ACTION IDENTIFIER
##

Expected `weight NUMBER`, or a newline, after the action identifier

main: FUZZ LBRACE ACTION IDENTIFIER WEIGHT WEIGHT
##
## Ends in an error in state: 80.
##
## fuzz_weight -> WEIGHT . INTEGER [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## WEIGHT
##

Expected an integer weight after `weight`

main: CPP VIA
##
## Ends in an error in state: 105.
##
## simple_stanza(CPP,cpp_item) -> CPP . LBRACE separated_nonempty_list(EOL,option(cpp_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## CPP
##
main: MACHINE IDENTIFIER LBRACE VIA SSH VIA
##
## Ends in an error in state: 5.
##
## simple_stanza(SSH,ssh_item) -> SSH . LBRACE separated_nonempty_list(EOL,option(ssh_item)) RBRACE [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## SSH
##
main: FUZZ WEIGHT
##
## Ends in an error in state: 76.
##
## simple_stanza(FUZZ,fuzz_item) -> FUZZ . LBRACE separated_nonempty_list(EOL,option(fuzz_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## FUZZ
##
main: DEFAULT WEIGHT
##
## Ends in an error in state: 90.
##
## simple_stanza(DEFAULT,default_item) -> DEFAULT . LBRACE separated_nonempty_list(EOL,option(default_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## DEFAULT
##

Expected an opening brace after the block name

main: MACHINE IDENTIFIER LBRACE COMPILER IDENTIFIER VIA
##
## Ends in an error in state: 46.
##
## id_stanza(COMPILER,compiler_item) -> COMPILER IDENTIFIER . LBRACE separated_nonempty_list(EOL,option(compiler_item)) RBRACE [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## COMPILER IDENTIFIER
##
main: MACHINE IDENTIFIER VIA
##
## Ends in an error in state: 2.
##
## id_stanza(MACHINE,machine_item) -> MACHINE IDENTIFIER . LBRACE separated_nonempty_list(EOL,option(machine_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## MACHINE IDENTIFIER
##
main: MACHINE IDENTIFIER LBRACE SIM IDENTIFIER VIA
##
## Ends in an error in state: 24.
##
## id_stanza(SIM,sim_item) -> SIM IDENTIFIER . LBRACE separated_nonempty_list(EOL,option(sim_item)) RBRACE [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## SIM IDENTIFIER
##

Expected an opening brace after the identifier

main: MACHINE IDENTIFIER LBRACE SIM IDENTIFIER LBRACE ASM_MODEL IDENTIFIER VIA
##
## Ends in an error in state: 33.
##
## sim_item -> ASM_MODEL IDENTIFIER . STRING [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## ASM_MODEL IDENTIFIER
##

Expected a quoted filename for this assembly model (after the architecture ID)

main: MACHINE IDENTIFIER LBRACE SIM IDENTIFIER LBRACE ASM_MODEL VIA
##
## Ends in an error in state: 32.
##
## sim_item -> ASM_MODEL . IDENTIFIER STRING [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## ASM_MODEL
##

Expected an architecture ID for this assembly model

main: MACHINE IDENTIFIER LBRACE SIM IDENTIFIER LBRACE CMD VIA
##
## Ends in an error in state: 30.
##
## cmd -> CMD . STRING [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## CMD
##

Expected a quoted command name or path

main: CPP LBRACE ENABLED BOOL VIA
##
## Ends in an error in state: 109.
##
## separated_nonempty_list(EOL,option(cpp_item)) -> option(cpp_item) . [ RBRACE ]
## separated_nonempty_list(EOL,option(cpp_item)) -> option(cpp_item) . EOL separated_nonempty_list(EOL,option(cpp_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(cpp_item)
##
main: MACHINE IDENTIFIER LBRACE SIM IDENTIFIER LBRACE C_MODEL STRING VIA
##
## Ends in an error in state: 38.
##
## separated_nonempty_list(EOL,option(sim_item)) -> option(sim_item) . [ RBRACE ]
## separated_nonempty_list(EOL,option(sim_item)) -> option(sim_item) . EOL separated_nonempty_list(EOL,option(sim_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(sim_item)
##
main: MACHINE IDENTIFIER LBRACE COMPILER IDENTIFIER LBRACE STYLE IDENTIFIER VIA
##
## Ends in an error in state: 56.
##
## separated_nonempty_list(EOL,option(compiler_item)) -> option(compiler_item) . [ RBRACE ]
## separated_nonempty_list(EOL,option(compiler_item)) -> option(compiler_item) . EOL separated_nonempty_list(EOL,option(compiler_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(compiler_item)
##
main: MACHINE IDENTIFIER LBRACE VIA LOCAL VIA
##
## Ends in an error in state: 68.
##
## separated_nonempty_list(EOL,option(machine_item)) -> option(machine_item) . [ RBRACE ]
## separated_nonempty_list(EOL,option(machine_item)) -> option(machine_item) . EOL separated_nonempty_list(EOL,option(machine_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(machine_item)
##
main: MACHINE IDENTIFIER LBRACE VIA SSH LBRACE USER STRING VIA
##
## Ends in an error in state: 17.
##
## separated_nonempty_list(EOL,option(ssh_item)) -> option(ssh_item) . [ RBRACE ]
## separated_nonempty_list(EOL,option(ssh_item)) -> option(ssh_item) . EOL separated_nonempty_list(EOL,option(ssh_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(ssh_item)
##
main: FUZZ LBRACE ACTION IDENTIFIER WEIGHT INTEGER WEIGHT
##
## Ends in an error in state: 86.
##
## separated_nonempty_list(EOL,option(fuzz_item)) -> option(fuzz_item) . [ RBRACE ]
## separated_nonempty_list(EOL,option(fuzz_item)) -> option(fuzz_item) . EOL separated_nonempty_list(EOL,option(fuzz_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(fuzz_item)
##
main: DEFAULT LBRACE TRY SIM IDENTIFIER EOF
##
## Ends in an error in state: 101.
##
## separated_nonempty_list(EOL,option(default_item)) -> option(default_item) . [ RBRACE ]
## separated_nonempty_list(EOL,option(default_item)) -> option(default_item) . EOL separated_nonempty_list(EOL,option(default_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(default_item)
##

Expected a closing brace (to terminate this block), or a newline

main: MACHINE IDENTIFIER LBRACE COMPILER IDENTIFIER LBRACE ARGV STRING VIA
##
## Ends in an error in state: 49.
##
## nonempty_list(STRING) -> STRING . [ RBRACE EOL ]
## nonempty_list(STRING) -> STRING . nonempty_list(STRING) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## STRING
##

Expected a closing brace (to terminate this block), another string, or a newline


main: CPP LBRACE EOL VIA
##
## Ends in an error in state: 110.
##
## separated_nonempty_list(EOL,option(cpp_item)) -> option(cpp_item) EOL . separated_nonempty_list(EOL,option(cpp_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(cpp_item) EOL
##
main: CPP LBRACE VIA
##
## Ends in an error in state: 106.
##
## simple_stanza(CPP,cpp_item) -> CPP LBRACE . separated_nonempty_list(EOL,option(cpp_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## CPP LBRACE
##

Expected a valid C preprocessor configuration item; for example:
- `cmd "/path/to/cpp"`
- `enabled BOOL`

main: MACHINE IDENTIFIER LBRACE RBRACE VIA
##
## Ends in an error in state: 122.
##
## separated_nonempty_list(EOL,option(top_stanza)) -> option(top_stanza) . [ EOF ]
## separated_nonempty_list(EOL,option(top_stanza)) -> option(top_stanza) . EOL separated_nonempty_list(EOL,option(top_stanza)) [ EOF ]
##
## The known suffix of the stack is as follows:
## option(top_stanza)
##

Top-level items must be separated by newlines

main: MACHINE IDENTIFIER LBRACE SIM IDENTIFIER LBRACE C_MODEL VIA
##
## Ends in an error in state: 28.
##
## sim_item -> C_MODEL . STRING [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## C_MODEL
##

Expected a quoted filename for the C model

main: MACHINE IDENTIFIER LBRACE SIM IDENTIFIER LBRACE VIA
##
## Ends in an error in state: 25.
##
## id_stanza(SIM,sim_item) -> SIM IDENTIFIER LBRACE . separated_nonempty_list(EOL,option(sim_item)) RBRACE [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## SIM IDENTIFIER LBRACE
##
main: MACHINE IDENTIFIER LBRACE SIM IDENTIFIER LBRACE C_MODEL STRING EOL VIA
##
## Ends in an error in state: 39.
##
## separated_nonempty_list(EOL,option(sim_item)) -> option(sim_item) EOL . separated_nonempty_list(EOL,option(sim_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(sim_item) EOL
##

Expected a valid simulator configuration item; for example:
- `cmd "/path/to/herd"`
- `c_model "/path/to/C/model.cat"`
- `asm_model ARCH-ID "/path/to/asm/model.cat"`

main: MACHINE IDENTIFIER LBRACE ENABLED VIA
##
## Ends in an error in state: 43.
##
## enabled -> ENABLED . BOOL [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## ENABLED
##

Expected a Boolean (eg `true`, `false`, `yes`, `no`, `on`, or `off`)

main: MACHINE IDENTIFIER LBRACE USER
##
## Ends in an error in state: 3.
##
## id_stanza(MACHINE,machine_item) -> MACHINE IDENTIFIER LBRACE . separated_nonempty_list(EOL,option(machine_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## MACHINE IDENTIFIER LBRACE
##
main: MACHINE IDENTIFIER LBRACE VIA LOCAL EOL USER
##
## Ends in an error in state: 69.
##
## separated_nonempty_list(EOL,option(machine_item)) -> option(machine_item) EOL . separated_nonempty_list(EOL,option(machine_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(machine_item) EOL
##

Expected a valid machine configuration item; for example:
- `enabled BOOL`
- `via local`
- `via ssh { SSH-CONFIG }`

main: MACHINE IDENTIFIER LBRACE VIA SSH LBRACE VIA
##
## Ends in an error in state: 6.
##
## simple_stanza(SSH,ssh_item) -> SSH LBRACE . separated_nonempty_list(EOL,option(ssh_item)) RBRACE [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## SSH LBRACE
##
main: MACHINE IDENTIFIER LBRACE VIA SSH LBRACE USER STRING EOL VIA
##
## Ends in an error in state: 18.
##
## separated_nonempty_list(EOL,option(ssh_item)) -> option(ssh_item) EOL . separated_nonempty_list(EOL,option(ssh_item)) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## option(ssh_item) EOL
##

Expected a valid SSH configuration item; for example:
- `user "USERNAME"`
- `host "HOSTNAME"`
- `copy to "REMOTE-PATH"`


main: MACHINE IDENTIFIER LBRACE VIA SSH LBRACE COPY TO VIA
##
## Ends in an error in state: 12.
##
## ssh_item -> COPY TO . STRING [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## COPY TO
##

Expected a quoted path after `copy to`

main: MACHINE IDENTIFIER LBRACE VIA SSH LBRACE COPY VIA
##
## Ends in an error in state: 11.
##
## ssh_item -> COPY . TO STRING [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## COPY
##

Expected `copy to`

main: MACHINE IDENTIFIER LBRACE VIA SSH LBRACE HOST VIA
##
## Ends in an error in state: 9.
##
## ssh_item -> HOST . STRING [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## HOST
##

Expected a quoted hostname string

main: MACHINE IDENTIFIER LBRACE VIA SSH LBRACE USER VIA
##
## Ends in an error in state: 7.
##
## ssh_item -> USER . STRING [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## USER
##

Expected a quoted username string

main: MACHINE IDENTIFIER LBRACE VIA VIA
##
## Ends in an error in state: 4.
##
## machine_item -> VIA . via_stanza [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## VIA
##

Expected a valid `via` stanza: either `local` or `ssh { SSH-CONFIG }`

main: MACHINE VIA
##
## Ends in an error in state: 1.
##
## id_stanza(MACHINE,machine_item) -> MACHINE . IDENTIFIER LBRACE separated_nonempty_list(EOL,option(machine_item)) RBRACE [ EOL EOF ]
##
## The known suffix of the stack is as follows:
## MACHINE
##

Expected a identifier, or `default`, after `machine`

main: VIA
##
## Ends in an error in state: 0.
##
## main' -> . main [ # ]
##
## The known suffix of the stack is as follows:
##
##
main: DEFAULT LBRACE RBRACE EOL TO
##
## Ends in an error in state: 123.
##
## separated_nonempty_list(EOL,option(top_stanza)) -> option(top_stanza) EOL . separated_nonempty_list(EOL,option(top_stanza)) [ EOF ]
##
## The known suffix of the stack is as follows:
## option(top_stanza) EOL
##

Expected a valid top-level item; for example:
- `default { ... }`
- `compiler ID { ... }`
